{"version":3,"sources":["logic/calculateWinner.js","components/board/square/Square.js","components/board/Board.js","components/history_bar/switch_order_button/SwitchOrderButton.js","components/history_bar/HistoryBar.js","components/game/GameComponent.js","components/game/GameContainer.js","components/home/Home.js","components/AppRouter.js","components/header/Header.js","components/footer/Footer.js","components/navbar/toggle_button/ToggleButton.js","components/navbar/NavBar.js","components/App.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","value","positions","Square","props","className","isHighlighted","onClick","disabled","isEditableSquare","Board","renderSquare","isEditableBoard","renderRow","fromPosition","toPosition","boardSquares","j","push","boardRows","NUM_ROWS","boardRow","renderRows","SwitchOrderButton","toggleOrder","isAscending","icon","faArrowDown","faArrowUp","HistoryBar","historyInfo","sortedMoves","isAscendingHistory","isHistoryBarOpen","stepNumber","sidebarClass","historyBarToggleIcon","faAngleDoubleUp","faAngleDoubleDown","renderedMoves","map","move","description","num","col","row","buildDescription","jumpTo","id","name","type","checked","onChange","toggleSidebar","GameComponent","gameStatus","nextPlayer","winner","GameContainer","useState","Array","from","Object","assign","squarePosition","history","setHistory","xIsNext","setXIsNext","setStepNumber","setIsAscendingHistory","setIsHistoryBarOpen","setIsEditableBoard","current","moves","step","numMove","Math","floor","extractMovesFrom","reverse","winnerPositions","position","square","highlightWinnerSquares","getNextPlayer","undefined","prevIsAscendingHistory","oldHistory","slice","prevHistory","concat","prevXIsNext","evt","prevIsHistoryBarOpen","Home","to","AppRouter","exact","path","component","Header","isHomeView","useLocation","pathname","Footer","href","faLinkedin","faGithub","faEnvelope","Date","getFullYear","ToggleButton","active","toggle","NavBar","isNavBarCollapsed","setIsNavBarCollapsed","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c840725.chunk.js","sourcesContent":["export function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    \r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a].value \r\n        && squares[a].value === squares[b].value \r\n        && squares[a].value === squares[c].value) {\r\n        return { \r\n          value: squares[a].value,\r\n          positions: [a, b, c]\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n}","import React from \"react\"\r\nimport './Square.scss';\r\n\r\nfunction Square(props) {\r\n\r\n    return (\r\n        <button \r\n            className={props.isHighlighted ? \"square highlighted\": \"square\"}\r\n            onClick={props.onClick} \r\n            disabled={!props.isEditableSquare}>\r\n            { props.value }\r\n        </button>\r\n    );\r\n}\r\n\r\n  export default Square;","import React from \"react\"\r\nimport Square from \"./square/Square\"\r\nimport './Board.scss';\r\n\r\nfunction Board(props) {\r\n\r\n    const NUM_ROWS = 3;\r\n    const NUM_COLS = 3;\r\n\r\n    function renderSquare(i) {\r\n        const { value, isHighlighted} = props.squares[i];\r\n        return (\r\n            <Square\r\n                key={i}\r\n                value={value}\r\n                isHighlighted={isHighlighted}\r\n                isEditableSquare={props.isEditableBoard}\r\n                onClick={() => props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n    \r\n    function renderRow(fromPosition, toPosition) {\r\n        let boardSquares = [];\r\n        for (let j = fromPosition; j < toPosition; ++j) {\r\n            boardSquares.push(renderSquare(j));\r\n        }\r\n        return boardSquares;\r\n    }\r\n\r\n    function renderRows() {\r\n        let boardRows = [];\r\n        for (let i = 0; i < NUM_ROWS * NUM_COLS; i += NUM_ROWS) {\r\n            const boardRow = renderRow(i, i + NUM_COLS);\r\n            boardRows.push(\r\n                (<div className=\"board-row\">\r\n                    {boardRow}\r\n                </div>)\r\n            );\r\n        }\r\n        return boardRows;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderRows()}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Board;","import React from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons'\r\nimport './SwitchButton.scss';\r\n\r\nfunction SwitchOrderButton(props) {\r\n\r\n    return (\r\n        <button onClick={() => props.toggleOrder()}>\r\n            <FontAwesomeIcon \r\n                className={props.isAscending ? \"selected\": \"unselected\"} \r\n                icon={faArrowDown} \r\n            />\r\n            <FontAwesomeIcon \r\n                className={props.isAscending ? \"unselected\": \"selected\"} \r\n                icon={faArrowUp} \r\n            />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SwitchOrderButton;","import React from \"react\"\r\nimport './HistoryBar.scss';\r\nimport SwitchOrderButton from \"./switch_order_button/SwitchOrderButton\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDoubleUp, faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction HistoryBar(props) {\r\n\r\n    function buildDescription(move) {\r\n        const { num, col, row} = move;\r\n        return num ?\r\n            <label>Move #{num}<label className=\"secondary\">row {row}, column {col}</label></label> :\r\n            <label>GAME START</label>;\r\n    }\r\n\r\n    function renderMoves(moves) {\r\n        return moves.map(move => {\r\n            const description = buildDescription(move);\r\n            const { num } = move; \r\n            return (\r\n                <li \r\n                className={ stepNumber === num ? \"history-move selected-move\" : \"history-move\" } \r\n                key={num}>\r\n                    <button onClick={() => props.jumpTo(num)}>{description}</button>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    const { sortedMoves, isAscendingHistory, isHistoryBarOpen, stepNumber } = props.historyInfo;\r\n    const sidebarClass = isHistoryBarOpen ? 'history-bar open' : 'history-bar';\r\n    const historyBarToggleIcon = isHistoryBarOpen ? faAngleDoubleUp : faAngleDoubleDown;\r\n    const renderedMoves = renderMoves(sortedMoves);\r\n    return (\r\n        <div className={sidebarClass}>\r\n            <label className=\"history-bar-toggle\">\r\n                <FontAwesomeIcon \r\n                    className={\"toggle-icon\"} \r\n                    icon={ historyBarToggleIcon } \r\n                />\r\n                <span>H</span>\r\n                <span>I</span>\r\n                <span>S</span>\r\n                <span>T</span>\r\n                <span>O</span>\r\n                <span>R</span>\r\n                <span>Y</span>\r\n                <FontAwesomeIcon \r\n                    className={\"toggle-icon\"}\r\n                    icon={ historyBarToggleIcon }\r\n                />\r\n                <input\r\n                    id=\"collapsible\"\r\n                    name=\"isChecked\"\r\n                    type=\"checkbox\"\r\n                    checked={ isHistoryBarOpen }\r\n                    onChange={ props.toggleSidebar } />\r\n            </label>\r\n            <div className=\"history-bar-content\">\r\n                <div className=\"history-container\">  \r\n                    <SwitchOrderButton \r\n                                isAscending={isAscendingHistory} \r\n                                toggleOrder={props.toggleOrder} \r\n                            />  \r\n                    <ol className=\"history\">{renderedMoves}</ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default HistoryBar","import './Game.scss';\r\nimport React from \"react\";\r\nimport Board from \"../board/Board\";\r\nimport HistoryBar from '../history_bar/HistoryBar';\r\n\r\nfunction GameComponent(props) {\r\n\r\n    let gameStatus;\r\n    if (props.nextPlayer) {\r\n        gameStatus = <h2>Next player is  <span>{props.nextPlayer}</span></h2>\r\n    } else if (props.winner) {\r\n        gameStatus = <h2 className=\"status\">The winner is <span>{props.winner}</span></h2>\r\n    } else {\r\n        gameStatus = <h2 className=\"status\">The result is a tie :(</h2>\r\n    }\r\n\r\n    return (\r\n         <section className=\"game\">\r\n            <div className=\"game-status\">\r\n            { gameStatus }\r\n            </div>\r\n            <div className=\"game-panel\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={props.squares}\r\n                        isEditableBoard={props.isEditableBoard}\r\n                        onClick={props.onClick}\r\n                    />\r\n                </div>\r\n                <HistoryBar \r\n                    toggleSidebar={props.toggleSidebar}\r\n                    toggleOrder={props.toggleOrder}\r\n                    historyInfo={props.historyInfo}\r\n                    jumpTo={props.jumpTo}\r\n                />\r\n            </div>\r\n        </section> \r\n    );\r\n}\r\n\r\nexport default GameComponent;","import React, {useState} from \"react\";\r\nimport { calculateWinner } from \"../../logic/calculateWinner\"\r\nimport GameComponent from \"./GameComponent\"\r\n\r\nfunction GameContainer() {\r\n\r\n    const BOARD_SIZE = 9;\r\n    \r\n    const [ history, setHistory ] = useState(\r\n        [{\r\n            squares: Array.from(\r\n                { length: BOARD_SIZE }, \r\n                () => Object.assign({ value: null, isHighlighted: false})\r\n            ),\r\n            squarePosition: -1\r\n        }]\r\n    );\r\n    const [ xIsNext, setXIsNext ] = useState(true);\r\n    const [ stepNumber, setStepNumber ] = useState(0);\r\n    const [ isAscendingHistory, setIsAscendingHistory ] = useState(true);\r\n    const [ isHistoryBarOpen, setIsHistoryBarOpen ] = useState(true);\r\n    const [ isEditableBoard, setIsEditableBoard ] = useState(true);\r\n\r\n    function handleClick(i) {\r\n\r\n        const oldHistory = history.slice(0, stepNumber + 1);\r\n        const current = oldHistory[oldHistory.length - 1];\r\n        const squares = [...current.squares];\r\n\r\n        if (calculateWinner(squares) || squares[i].value) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = {\r\n            ...squares[i],\r\n            value: xIsNext ? 'X' : 'O'\r\n        }\r\n        setHistory(prevHistory => prevHistory.concat([{\r\n            squares: squares,\r\n            squarePosition: i\r\n        }]));\r\n        setStepNumber(oldHistory.length);\r\n        setXIsNext(prevXIsNext => !prevXIsNext);\r\n    }\r\n\r\n    function jumpTo(step) {\r\n        setIsEditableBoard(step === history.length - 1);\r\n        \r\n        setStepNumber(step);\r\n        setXIsNext((step % 2) === 0);\r\n    }\r\n\r\n    \r\n    function toggleOrder() {\r\n        setIsAscendingHistory(prevIsAscendingHistory => !prevIsAscendingHistory)\r\n    }\r\n    \r\n    function extractMovesFrom(history) {\r\n        return history.map((step, numMove) => {\r\n            let row = -1;\r\n            let col = -1;\r\n            if (numMove) {\r\n                const { squarePosition } = step;\r\n                row = Math.floor(squarePosition / 3);\r\n                col = squarePosition % 3;\r\n            }\r\n            return { num: numMove, row: row, col: col};\r\n        });\r\n    }\r\n\r\n    function getNextPlayer(winner) {\r\n        if (winner || stepNumber === BOARD_SIZE) {\r\n            return null;\r\n        }\r\n        return xIsNext ? 'X' : 'O';\r\n    }\r\n\r\n    function highlightWinnerSquares(squares, winnerPositions) {\r\n        let position = 0;\r\n        return squares.map((square, i) => {\r\n            if(position < winnerPositions.length \r\n                && i == winnerPositions[position]) {\r\n                ++position;\r\n                return {\r\n                    ... square,\r\n                    isHighlighted: true\r\n                }\r\n            }\r\n            return square;\r\n        })\r\n\r\n    }\r\n\r\n    function handleToggleSideBar(evt) {\r\n        setIsHistoryBarOpen(prevIsHistoryBarOpen => !prevIsHistoryBarOpen)\r\n    }\r\n\r\n    const current = history[stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = extractMovesFrom(history);\r\n\r\n    const sortedMoves = isAscendingHistory \r\n        ? moves \r\n        : moves.reverse();\r\n\r\n    const squares = winner \r\n        ? highlightWinnerSquares(current.squares, winner.positions) \r\n        : current.squares;\r\n\r\n    return (\r\n        <GameComponent \r\n            squares={squares}\r\n            nextPlayer={getNextPlayer(winner)}\r\n            winner={winner ? winner.value : undefined}\r\n            toggleOrder={toggleOrder}\r\n            onClick={handleClick}\r\n            isEditableBoard={isEditableBoard}\r\n            toggleSidebar={handleToggleSideBar}\r\n            historyInfo={{sortedMoves, isAscendingHistory, isHistoryBarOpen, stepNumber}}\r\n            jumpTo={jumpTo}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GameContainer;","import React from \"react\"\r\nimport \"./Home.scss\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <section id=\"home\">\r\n            <Link to=\"/tictactoe/game\">Play</Link>\r\n            <article>\r\n                <h3>Rules</h3>\r\n                <ul>\r\n                    <li>The game is played on a grid that's 3 squares by 3 squares.</li>\r\n                    <li>You are X, your friend (or the computer in this case) is O.</li>\r\n                    <li>The first player to get 3 of her marks in a row (up, down, across, or diagonally) is the winner.</li>\r\n                    <li>When all 9 squares are full, the game is over.</li>\r\n                </ul>              \r\n            </article>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport GameContainer from \"./game/GameContainer\"\r\nimport Home from \"./home/Home\"\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/tictactoe\" component={Home} />\r\n            <Route path=\"/tictactoe/game\" component={GameContainer} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React from \"react\"\r\nimport \"./Header.scss\"\r\nimport { useLocation } from 'react-router-dom'\r\nconst HOME_PATH = '/tictactoe';\r\n\r\nfunction Header() {\r\n    const location = useLocation();\r\n    const isHomeView = location.pathname === HOME_PATH;\r\n\r\n    return (\r\n        <header className={isHomeView ? \"expanded\": null}>\r\n            <h1><span>Welcome<span>to</span></span>\r\n             TIC TAC TOE</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\nimport \"./Footer.scss\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"links\">\r\n                <div className=\"col\">\r\n                    <h3>TIC TAC TOE</h3>\r\n                    <p>Interactive game developed with React.</p>\r\n                    <a className=\"link\" href=\"https://github.com/mery25/react-tictactoe\">View source code</a>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h4>Quick links</h4>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"https://www.linkedin.com/in/maria-t-43563946\">                \r\n                                <FontAwesomeIcon  icon={ faLinkedin } className=\"link\"/>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"https://github.com/mery25\">                \r\n                            <FontAwesomeIcon icon={ faGithub } className=\"link\" />\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"mailto:maria.ta.89@gmail.com?Subject=Contact%20from%20TicTacToe%20App\">                \r\n                            <FontAwesomeIcon icon={ faEnvelope } className=\"link\" />\r\n                            </a>\r\n                        </li>                  \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"copyright\">Copyright © {new Date().getFullYear()} Maria Tibau Aynes. All rights reserved.</div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\"\r\nimport \"./ToggleButton.scss\"\r\n\r\nfunction ToggleButton({ active, toggle }) {\r\n    return (\r\n        <label id=\"toggle\" className={active ? \"checked\" : null} >\r\n            <span></span>\r\n            <input \r\n                type=\"checkbox\"\r\n                checked={active}\r\n                id=\"toggle--input\"\r\n                onChange={() => toggle()}\r\n            />\r\n        </label>\r\n/*         <a href=\"#menu\" id=\"toggle\" className={active ? \"checked\" : \"\"} onClick={() => toggleButton()} ><span></span></a>\r\n */    )\r\n}\r\n\r\nexport default ToggleButton","import React, {useState} from \"react\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport \"./NavBar.scss\"\r\nimport ToggleButton from './toggle_button/ToggleButton'\r\n\r\nfunction NavBar() {\r\n\r\n    const [ isNavBarCollapsed, setIsNavBarCollapsed ] = useState(true);\r\n\r\n    const toggleNavbar = () => setIsNavBarCollapsed( isNavBarCollapsed => !isNavBarCollapsed )\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <ToggleButton active={!isNavBarCollapsed} toggle={toggleNavbar}/>\r\n            <nav className={ isNavBarCollapsed ? \"collapsed\" : null }>\r\n                <NavLink className=\"navbar-link\" exact to=\"/tictactoe\">Home</NavLink>\r\n                <NavLink className=\"navbar-link\" to=\"/tictactoe/game\">Game</NavLink>\r\n                <NavLink className=\"navbar-link\" to=\"/tictactoe/ranking\">Ranking</NavLink>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from \"react\"\r\nimport AppRouter from \"./AppRouter\"\r\nimport Header from \"./header/Header\"\r\nimport Footer from \"./footer/Footer\"\r\nimport NavBar from \"./navbar/NavBar\"\r\nimport \"./App.scss\"\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <Header />\r\n            <main>\r\n                <AppRouter />\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}